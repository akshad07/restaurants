"use strict";

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly)
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    keys.push.apply(keys, symbols);
  }
  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(
          target,
          key,
          Object.getOwnPropertyDescriptor(source, key)
        );
      });
    }
  }
  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true,
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

$(document).ready(function () {
//******************************Revenue Basic Area Graph Chart in Dashboard******************************************
/**
 * initRevenueBasicAreaChart(todayData, yesterdayData):
 * Generates a basic area Graph for revenue representation with two lines, one for today's revenue, second for yesterday's revenue.
 *
 * @param {number[]} todayData - list of numbers for today's revenue.
 * @param {number[]} yesterdayData - list of numbers for yesterday's revenue.
 */
function initRevenueBasicAreaChart(todayData, yesterdayData){
  var bAOptions = {
  chart: {
    height: 100,
    type: 'area',
    zoom: {
      enabled: false
    },
    sparkline: {
      enabled: true
    },
    toolbar: {
      show: false,
      tools: {
        download: false
      }
    }
  },
  dataLabels: {
    enabled: false
  },
  stroke: {
    curve: 'straight',
    width: 1
  },
  series: [{
    name: 'today',
    data: todayData
  }, {
    name: 'yesterday',
    data: yesterdayData
  }],
  colors: ['#6ed3cf', '#4caf50']
};
var chart = new ApexCharts(document.querySelector("#revenue-basicArea-chart"), bAOptions);
chart.render(); // end revenue basic area chart
}
//******************************Profit Basic Area Graph Chart in Dashboard******************************************
/**
 * initProfitBasicAreaChart(todayData, yesterdayData):
 * Generates a basic area Graph for profit representation with two lines, one for today's profit, second for yesterday's profit.
 *
 * @param {number[]} todayData - list of numbers for today's profit.
 * @param {number[]} yesterdayData - list of numbers for yesterday's profit.
 */
function initProfitBasicAreaChart(todayData, yesterdayData){
var bAOptions = {
  chart: {
    height: 100,
    type: 'area',
    zoom: {
      enabled: false
    },
    sparkline: {
      enabled: true
    },
    toolbar: {
      show: false,
      tools: {
        download: false
      }
    }
  },
  dataLabels: {
    enabled: false
  },
  stroke: {
    curve: 'smooth',
    width: 1
  },
  series: [{
    name: 'Today',
    data: todayData
  }, {
    name: 'Yesterday',
    data: yesterdayData
  }],
  colors: ['#6ed3cf', '#9068be']
};
var chart = new ApexCharts(document.querySelector("#profit-basicArea-chart2"), bAOptions);
chart.render();} 
// end  profit basic area chart
//******************************Expense Basic Area Graph Chart in Dashboard******************************************
/**
 * initExpenseBasicAreaChart(todayData, yesterdayData):
 * Generates a basic area Graph for expense representation with two lines, one for today's expenses, second for yesterday's expenses.
 *
 * @param {number[]} todayData - list of numbers for today's expense.
 * @param {number[]} yesterdayData - list of numbers for yesterday's expense.
 */
function initExpenseBasicAreaChart(todayData, yesterdayData){
var bAOptions = {
  chart: {
    height: 100,
    type: 'area',
    zoom: {
      enabled: false
    },
    sparkline: {
      enabled: true
    },
    toolbar: {
      show: false,
      tools: {
        download: false
      }
    }
  },
  dataLabels: {
    enabled: false
  },
  stroke: {
    curve: 'smooth',
    width: 1
  },
  series: [{
    name: 'Today',
    data: todayData
  }, {
    name: 'Yesterday',
    data: yesterdayData
  }],
  colors: ['#fae596', '#3fb0ac']
};
var chart = new ApexCharts(document.querySelector("#expense-basicArea-chart3"), bAOptions);
chart.render(); }
// end expense basic area chart
//******************************Orders Bar Graph Chart in Dashboard******************************************
/**
 * initOrdersGraph(totalData, completedData, cancelledData):
 * Generates a Bar Graph for Orders representation with three bars, one for total Orders, second for Completed orders and third for cancelled orders.
 *
 * @param {number[]} totalData - list of numbers for total orders.
 * @param {number[]} completedData - list of numbers of completed orders.
 * @param {number[]} cancelledData - list of numbers of cancelled orders.
 */
  function initOrdersGraph(totalData, completedData, cancelledData) {
    var echartElemBar = document.getElementById("order-echartBar");
    var totalData = totalData;
    var completedData = completedData;
    var cancelledData = cancelledData;

    if (echartElemBar) {
      var echartBar = echarts.init(echartElemBar);
      var graphValue = document.getElementById("orders-graph-id").value;
      if(graphValue == "annually"){
        var xAxisData = [
          'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',
        ];
      }else if(graphValue == "quarterly"){
        var xAxisData = [
          'Q1', 'Q2', 'Q3', 'Q4'
        ];
      }else if(graphValue == "weekly") {
      var xAxisData = [
        "Sun", "Mon", "Tue", "Wed", "Thr", "Fri", "Sat",
      ];
      
    } else if(graphValue == "monthly") {
      var xAxisData = [
        "Week 1", "Week 2", "Week 3", "Week 4",
      ];
    }else{
      var xAxisData = [
        "Morning", "Afternoon", "Evening", "Night",
      ];
  }
  
      echartBar.setOption({
        legend: {
          borderRadius: 0,
          orient: "horizontal",
          x: "right",
          data: ["Total", "Completed", "Cancelled"],
        },
        grid: {
          left: "8px",
          right: "8px",
          bottom: "0",
          containLabel: true,
        },
        tooltip: {
          show: true,
          backgroundColor: "rgba(0, 0, 0, .8)",
        },
        xAxis: [
          {
            type: "category",
            data: xAxisData,
            axisTick: {
              alignWithLabel: true,
            },
            splitLine: {
              show: false,
            },
            axisLine: {
              show: true,
            },
          },
        ],
        yAxis: [
          {
            type: "value",
            axisLabel: {
              formatter: "{value}",
            },
            min: 0,
            max: Math.max(...totalData),
            interval: Math.ceil(Math.max(...totalData)/7),
            axisLine: {
              show: false,
            },
            splitLine: {
              show: true,
              interval: "auto",
            },
          },
        ],
        series: [
          {
            name: "Total",
            data: totalData,
            label: {
              show: false,
              color: "#3182bd",
            },
            type: "bar",
            barGap: 0,
            color: "#7affa7",
            smooth: true,
            itemStyle: {
              emphasis: {
                shadowBlur: 10,
                shadowOffsetX: 0,
                shadowOffsetY: -2,
                shadowColor: "rgba(0, 0, 0, 0.3)",
              },
            },
          },
          {
            name: "Completed",
            data: completedData,
            label: {
              show: false,
              color: "#639",
            },
            type: "bar",
            color: "#74c475",
            smooth: true,
            itemStyle: {
              emphasis: {
                shadowBlur: 10,
                shadowOffsetX: 0,
                shadowOffsetY: -2,
                shadowColor: "rgba(0, 0, 0, 0.3)",
              },
            },
          },
          {
            name: "Cancelled",
            data: cancelledData,
            label: {
              show: false,
              color: "#639",
            },
            type: "bar",
            color: "#e6550d",
            smooth: true,
            itemStyle: {
              emphasis: {
                shadowBlur: 10,
                shadowOffsetX: 0,
                shadowOffsetY: -2,
                shadowColor: "rgba(0, 0, 0, 0.3)",
              },
            },
          },
        ],
      });
      $(window).on("resize", function () {
        setTimeout(function () {
          echartBar.resize();
        }, 500);
      });
    } 
  }
 //*****************************Finance EChart Bar in Dashboard*****************************************
 /**
 * initFinanceGraph(revenueData, profitData, expenseData):
 * Generates a Bar Graph for financial representation with three bars, one for total Revenue, second for Profit and third for Expenses.
 *
 * @param {number[]} revenueData - list of numbers for revenue.
 * @param {number[]} profitData - list of numbers of profit.
 * @param {number[]} expenseData - list of numbers of expenses.
 */
 function initFinanceGraph(revenueData, profitData, expenseData) {
  var echartElemBar = document.getElementById("finance-echartBar");
  var revenueData = revenueData;
  var profitData = profitData;
  var expenseData = expenseData;

  if (echartElemBar) {
    var echartBar = echarts.init(echartElemBar);
    var graphValue = document.getElementById("finance-graph-id").value;
    if(graphValue == "annually"){
      var xAxisData = [
        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',
      ];
    }else if(graphValue == "quarterly"){
      var xAxisData = [
        'Q1', 'Q2', 'Q3', 'Q4'
      ];
    }else if(graphValue == "weekly") {
    var xAxisData = [
      "Sun", "Mon", "Tue", "Wed", "Thr", "Fri", "Sat",
    ];
    
  } else if(graphValue == "monthly") {
    var xAxisData = [
      "Week 1", "Week 2", "Week 3", "Week 4",
    ];
  }else{
    var xAxisData = [
      "Morning", "Afternoon", "Evening", "Night",
    ];
}

    echartBar.setOption({
      legend: {
        borderRadius: 0,
        orient: "horizontal",
        x: "right",
        data: ["Revenue", "Profit", "Expense"],
      },
      grid: {
        left: "8px",
        right: "8px",
        bottom: "0",
        containLabel: true,
      },
      tooltip: {
        show: true,
        backgroundColor: "rgba(0, 0, 0, .8)",
      },
      xAxis: [
        {
          type: "category",
          data: xAxisData,
          axisTick: {
            alignWithLabel: true,
          },
          splitLine: {
            show: false,
          },
          axisLine: {
            show: true,
          },
        },
      ],
      yAxis: [
        {
          type: "value",
          axisLabel: {
            formatter: "₹{value}",
          },
          min: 0,
          max: Math.max(...revenueData),
          interval: Math.ceil(Math.max(...revenueData)/7),
          axisLine: {
            show: false,
          },
          splitLine: {
            show: true,
            interval: "auto",
          },
        },
      ],
      series: [
        {
          name: "Revenue",
          data: revenueData,
          label: {
            show: false,
            color: "#0168c1",
          },
          type: "bar",
          barGap: 0,
          color: "#7affa7",
          smooth: true,
          itemStyle: {
            emphasis: {
              shadowBlur: 10,
              shadowOffsetX: 0,
              shadowOffsetY: -2,
              shadowColor: "rgba(0, 0, 0, 0.3)",
            },
          },
        },
        {
          name: "Profit",
          data: profitData,
          label: {
            show: false,
            color: "#639",
          },
          type: "bar",
          color: "#0168c1",
          smooth: true,
          itemStyle: {
            emphasis: {
              shadowBlur: 10,
              shadowOffsetX: 0,
              shadowOffsetY: -2,
              shadowColor: "rgba(0, 0, 0, 0.3)",
            },
          },
        },
        {
          name: "Expense",
          data: expenseData,
          label: {
            show: false,
            color: "#639",
          },
          type: "bar",
          color: "#000",
          smooth: true,
          itemStyle: {
            emphasis: {
              shadowBlur: 10,
              shadowOffsetX: 0,
              shadowOffsetY: -2,
              shadowColor: "rgba(0, 0, 0, 0.3)",
            },
          },
        },
      ],
    });
    $(window).on("resize", function () {
      setTimeout(function () {
        echartBar.resize();
      }, 500);
    });
  } 
}


  // var echartElemPie = document.getElementById("echartPie");

  // if (echartElemPie) {
  //   var echartPie = echarts.init(echartElemPie);
  //   echartPie.setOption({
  //     color: ["#62ff9c", "#9ADE7B", "#508D69", "#FF8F8F", "#91ffbd", "#FF78C4"],
  //     tooltip: {
  //       show: true,
  //       backgroundColor: "rgba(0, 0, 0, .8)",
  //     },
  //     series: [
  //       {
  //         name: "Sales by Area",
  //         type: "pie",
  //         radius: "60%",
  //         center: ["50%", "50%"],
  //         data: [
  //           {
  //             value: 535,
  //             name: "Gangapur Road",
  //           },
  //           {
  //             value: 310,
  //             name: "Mahatma Nagar",
  //           },
  //           {
  //             value: 234,
  //             name: "Pavan Nagar",
  //           },
  //           {
  //             value: 155,
  //             name: "Satpur",
  //           },
  //           {
  //             value: 130,
  //             name: "Nashik Road",
  //           },
  //           {
  //             value: 348,
  //             name: "College Road",
  //           },
  //         ],
  //         itemStyle: {
  //           emphasis: {
  //             shadowBlur: 10,
  //             shadowOffsetX: 0,
  //             shadowColor: "rgba(0, 0, 0, 0.5)",
  //           },
  //         },
  //       },
  //     ],
  //   });
  //   $(window).on("resize", function () {
  //     setTimeout(function () {
  //       echartPie.resize();
  //     }, 500);
  //   });
  // } // Chart in Dashboard version 1

  // var echartElem1 = document.getElementById("echart1");

  // if (echartElem1) {
  //   var echart1 = echarts.init(echartElem1);
  //   echart1.setOption(
  //     _objectSpread(
  //       {},
  //       echartOptions.lineFullWidth,
  //       {},
  //       {
  //         series: [
  //           _objectSpread(
  //             {
  //               data: [30, 40, 20, 50, 40, 80, 90],
  //             },
  //             echartOptions.smoothLine,
  //             {
  //               markArea: {
  //                 label: {
  //                   show: true,
  //                 },
  //               },
  //               areaStyle: {
  //                 color: "rgba(102, 51, 153, .2)",
  //                 origin: "start",
  //               },
  //               lineStyle: {
  //                 color: "#8B5CF6",
  //               },
  //               itemStyle: {
  //                 color: "#8B5CF6",
  //               },
  //             }
  //           ),
  //         ],
  //       }
  //     )
  //   );
  //   $(window).on("resize", function () {
  //     setTimeout(function () {
  //       echart1.resize();
  //     }, 500);
  //   });
  // } // Chart in Dashboard version 1

  // var echartElem2 = document.getElementById("echart2");

  // if (echartElem2) {
  //   var echart2 = echarts.init(echartElem2);
  //   echart2.setOption(
  //     _objectSpread(
  //       {},
  //       echartOptions.lineFullWidth,
  //       {},
  //       {
  //         series: [
  //           _objectSpread(
  //             {
  //               data: [30, 10, 40, 10, 40, 20, 90],
  //             },
  //             echartOptions.smoothLine,
  //             {
  //               markArea: {
  //                 label: {
  //                   show: true,
  //                 },
  //               },
  //               areaStyle: {
  //                 color: "rgba(255, 193, 7, 0.2)",
  //                 origin: "start",
  //               },
  //               lineStyle: {
  //                 color: "#FFC107",
  //               },
  //               itemStyle: {
  //                 color: "#FFC107",
  //               },
  //             }
  //           ),
  //         ],
  //       }
  //     )
  //   );
  //   $(window).on("resize", function () {
  //     setTimeout(function () {
  //       echart2.resize();
  //     }, 500);
  //   });
  // } // Chart in Dashboard version 1

  // var echartElem3 = document.getElementById("echart3");

  // if (echartElem3) {
  //   var echart3 = echarts.init(echartElem3);
  //   echart3.setOption(
  //     _objectSpread(
  //       {},
  //       echartOptions.lineNoAxis,
  //       {},
  //       {
  //         series: [
  //           {
  //             data: [
  //               40,
  //               80,
  //               20,
  //               90,
  //               30,
  //               80,
  //               40,
  //               90,
  //               20,
  //               80,
  //               30,
  //               45,
  //               50,
  //               110,
  //               90,
  //               145,
  //               120,
  //               135,
  //               120,
  //               140,
  //             ],
  //             lineStyle: _objectSpread(
  //               {
  //                 color: "#23aa49",
  //                 width: 3,
  //               },
  //               echartOptions.lineShadow
  //             ),
  //             label: {
  //               show: true,
  //               color: "#23aa49",
  //             },
  //             type: "line",
  //             smooth: true,
  //             itemStyle: {
  //               borderColor: "#23aa49",
  //             },
  //           },
  //         ],
  //       }
  //     )
  //   );
  //   $(window).on("resize", function () {
  //     setTimeout(function () {
  //       echart3.resize();
  //     }, 500);
  //   });
  // }
  
  // orders bar graph change graph according to dropdown value
  $("#orders-graph-id").on("change", ()=>{
    var graphValue = document.getElementById("orders-graph-id").value;
    if(graphValue == "annually"){
      var totalData = [60, 40, 20, 30, 60, 130, 180, 60, 40, 20, 30, 60];
      var completedData = [50, 40, 10, 20, 30, 60, 130, 50, 40, 10, 20, 30];
      var cancelledData = [10, 0, 10, 10, 30, 70, 50, 10, 0, 10, 10, 30];
    }else if(graphValue == "quarterly"){
      var totalData = [60, 40, 20, 30];
      var completedData = [50, 40, 10, 20];
      var cancelledData = [10, 0, 10, 10];
    }else if(graphValue == "weekly") {
      var totalData = [60, 40, 20, 30, 60, 130, 180];
      var completedData = [50, 40, 10, 20, 30, 60, 130];
      var cancelledData = [10, 0, 10, 10, 30, 70, 50];
    } else if(graphValue == "monthly") {
      var totalData = [65, 45, 90, 35];
      var completedData = [45, 30, 60, 25];
      var cancelledData = [20, 15, 30, 10];
    }else{
      var totalData = [108,203,147,288];
      var completedData = [67,124,89,176];
      var cancelledData = [41,79,58,112];
    }
    
    initOrdersGraph(totalData, completedData, cancelledData);
  });
  // finance bar graph change graph according to dropdown value
  $("#finance-graph-id").on("change", ()=>{
    var graphValue = document.getElementById("finance-graph-id").value;
    if(graphValue == "annually"){
      var revenueData = [60, 40, 20, 30, 60, 130, 180, 60, 40, 20, 30, 60];
      var profitData = [50, 40, 10, 20, 30, 60, 130, 50, 40, 10, 20, 30];
      var expenseData = [10, 0, 10, 10, 30, 70, 50, 10, 0, 10, 10, 30];
    }else if(graphValue == "quarterly"){
      var revenueData = [60, 40, 20, 30];
      var profitData = [50, 40, 10, 20];
      var expenseData = [10, 0, 10, 10];
    }else if(graphValue == "weekly") {
      var revenueData = [60, 40, 20, 30, 60, 130, 180];
      var profitData = [50, 40, 10, 20, 30, 60, 130];
      var expenseData = [10, 0, 10, 10, 30, 70, 50];
    } else if(graphValue == "monthly") {
      var revenueData = [65, 45, 90, 35];
      var profitData = [45, 30, 60, 25];
      var expenseData = [20, 15, 30, 10];
    }else{
      var revenueData = [108,203,147,288];
      var profitData = [67,124,89,176];
      var expenseData = [41,79,58,112];
    }
    
    initFinanceGraph(revenueData, profitData, expenseData);
  });
  // initOrdersGraph(totalData, completedData, cancelledData)
  initOrdersGraph([108,203,147,288], [67,124,89,176], [41,79,58,112]);
  // initFinanceGraph(revenueData, profitData, expenseData)
  initFinanceGraph([108,203,147,288],[67,124,89,176],[41,79,58,112]);
  // initRevenueBasicAreaChart(todayData, yesterdayData)
  initRevenueBasicAreaChart([31, 40, 28, 51, 42, 109, 100], [11, 32, 45, 32, 34, 52, 41]);
  // initProfitBasicAreaChart(todayData, yesterdayData)
  initProfitBasicAreaChart([90, 40, 28, 51, 42, 109, 100], [11, 90, 45, 32, 34, 52, 41]);
  // initExpenseBasicAreaChart(todayData, yesterdayData)
  initExpenseBasicAreaChart([11, 40, 28, 51, 42, 109, 100], [100, 40, 45, 32, 34, 0, 41]);
});
